"""init

Revision ID: 84164c6f5a95
Revises: 
Create Date: 2025-04-01 13:29:04.993473

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '84164c6f5a95'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('permissions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name'),
    schema='user_auth'
    )
    op.create_index(op.f('ix_user_auth_permissions_id'), 'permissions', ['id'], unique=False, schema='user_auth')
    op.create_table('ranks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('level', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('level'),
    sa.UniqueConstraint('name'),
    schema='user_auth'
    )
    op.create_index(op.f('ix_user_auth_ranks_id'), 'ranks', ['id'], unique=False, schema='user_auth')
    op.create_table('rank_permissions',
    sa.Column('rank_id', sa.Integer(), nullable=False),
    sa.Column('permission_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['permission_id'], ['user_auth.permissions.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['rank_id'], ['user_auth.ranks.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('rank_id', 'permission_id'),
    schema='user_auth'
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('login', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('surname', sa.String(), nullable=False),
    sa.Column('rank_id', sa.Integer(), nullable=False),
    sa.Column('password_hash', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['rank_id'], ['user_auth.ranks.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('login'),
    schema='user_auth'
    )
    op.create_table('refresh_tokens',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('refresh_token', sa.String(), nullable=False),
    sa.Column('fingerprint', sa.String(), nullable=False),
    sa.Column('expired_at', sa.Date(), server_default=sa.text('CURRENT_DATE + make_interval(secs=>2592000.0)'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user_auth.users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('refresh_token'),
    schema='user_auth'
    )
    op.create_index(op.f('ix_user_auth_refresh_tokens_user_id'), 'refresh_tokens', ['user_id'], unique=False, schema='user_auth')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_user_auth_refresh_tokens_user_id'), table_name='refresh_tokens', schema='user_auth')
    op.drop_table('refresh_tokens', schema='user_auth')
    op.drop_table('users', schema='user_auth')
    op.drop_table('rank_permissions', schema='user_auth')
    op.drop_index(op.f('ix_user_auth_ranks_id'), table_name='ranks', schema='user_auth')
    op.drop_table('ranks', schema='user_auth')
    op.drop_index(op.f('ix_user_auth_permissions_id'), table_name='permissions', schema='user_auth')
    op.drop_table('permissions', schema='user_auth')
    # ### end Alembic commands ###
